# This is a basic workflow to help you get started with Actions
 
name: CI
 
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ] # git push
  pull_request:
    branches: [ "main" ] # git checkout -b new_branch
                         # create pull request
                         # from new_branch to main branch
 
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
 
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }} # this is just a sensitive value bleongs to your repo
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACESS_KEY }}
  AWS_REGION: us-east-1
 
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  terraform:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
 
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4
      
      - name: My First Terraform Setup
        uses: hashicorp/setup-terraform@v1 # installs the terraform application
        with:
          cli_config_credentials_token: ${{ secrets.TF_LOGIN_TOKEN }}
      
      - name: Run Terraform Init
        run: terraform init
 
      - name: Check Terraform Format
        run: terraform fmt -check -recursive
 
      - name: Run Terraform Plan
        run: terraform plan
      
      - name: Run Terraform Apply
        run: terraform apply -auto-approve
      
      - name: Run Terraform Destroy
        run: terraform destroy -auto-approve
 
      # 1 Install terraform - COMPLETE
      # 2 TERRAFORM LOGIN | copy a token and paste on our machine - COMPLETE
      # 3 Authentication with AWS Account - COMPLETE
 
#create 2 workflow for 1 repository
#1 workflow creates your resources and it can be triggered on push event,
#workflow #2 needs to be only on manual workflow dispatch and it needs to destroy
 